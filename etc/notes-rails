
# set variable/label in view, great for dynamic content:
<% provide(:name, "value") %>

# test if dom element exists and has certain inner html:
test "should ..." do
	get ...
	assert_select "element", "inner html"
end

# blank? method, added by Rails:
>> "".blank?
=> true
>> "      ".empty?
=> false
>> "      ".blank?
=> true
>> nil.blank?
=> true

# in model:
has_secure_password  # requires 'bcrypt' gem
# generates password_digest (hash) in database for model

# debugging with 'byebug' gem:
# add ...
debugger
# ... to action in controller to get start byebug in server console
# provides interactive access to request variables and the like

# reset database with rails:
rails db:migrate:reset

# use secure SSL in production:
# uncomment 'config.force_ssl = true' in file config/environments/production.rb
# SSl will have to be enabled (via purchased certificate) on production server
# heroku does this automatically and for free due to its SSL certificate
# "If you want to run SSL on a custom domain, such as www.example.com, refer to Herokuâ€™s documentation on SSL.":
# http://devcenter.heroku.com/articles/ssl

# using puma as webserver for services that don't do this by default:
# https://www.railstutorial.org/book/sign_up#code-production_webserver_config
# https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server

